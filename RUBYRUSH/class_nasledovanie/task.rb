require "date" # Подключим встроенный в руби класс Date для работы с датами, чтоб преобразовать строку в дату

class Task < Post   # Класс «Задача», разновидность базового класса «Запись»
    def initialize  # Конструктор у класса «Задача» свой, но использует конструктор родителя.
        super

        @due_date = Time.now  # Создаем специфичную для ссылки переменную экземпляра @due_date — время, к
                              # которому задачу нужно выполнить
    end


                                        # Напишем реализацию метода read_from_console для экземпляра задачи. Он
                                        # спрашивает у пользователя текст задачи (что нужно сделать) и дату, до
                                        # которой нужно успеть это сделать.
    def read_from_console
        puts "Что надо сделать?"
        @text = STDIN.gets.chomp

                                        # Спросим у пользователя, до какого числа ему нужно выполнить задачу и
                                        # подскажем формат, в котором нужно вводить дату. А потом запишем его ответ
                                        # в локальную переменную input.
        puts "К какому числу? Укажите дату в формате ДД.ММ.ГГГГ (например 12.05.2022)" 
        input = STDIN.gets.chomp
                                        # Для того, чтобы из строки получить объект класса Date, с которым очень
                                        # удобно работать (например, можно вычислить, сколько осталось дней до
                                        # нужной даты), мы получим этот объект из строки с помощью метода класса
                                        # Date (статического метода).
        @due_date = Date.parse(input)
    end

    def to_strings  # Массив из трех строк: адрес ссылки, описание и дата создания
        deadline = "Крайний срок: #{@due_date.strftime('%Y.%m.%d')}"
        time_string = "Создано: #{@created_at.strftime('%Y.%m.%d, %H:%M:%S')} \n\r"

       return [deadline, @text, time_string]
    end

end