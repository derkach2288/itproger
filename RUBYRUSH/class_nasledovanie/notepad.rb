# Подключаем класс Post и его детей: Memo, Link, Task
require_relative 'post.rb'
require_relative 'memo.rb'
require_relative 'link.rb'
require_relative 'task.rb'

puts 'Привет, я твой блокнот!'
puts
puts 'Что хотите записать в блокнот?'



choices = Post.post_types   # Запишем в переменную choices массив типов записей, которые можно создать,
                            # вызвав у класса Post метод post_types (статический метод).


choice = -1   # Для начала цикла запишем в переменную choice (куда позже будем складывать выбор пользователя) значение -1.

until choice >= 0 && choice < choices.size   # Пока юзер не выбрал правильно (от 0 до длины массива вариантов), спрашиваем
    choices.each_with_index do |type, index|  # у него число и выводим список возможных вариантов для записи.
        puts "\t#{index}. #{type}"
    end
    
    choice = STDIN.gets.to_i   # Запишем выбор пользователя в переменную choice
    
end

                            # Как только выбор сделан, мы можем создать запись нужного типа, передав выбор
                            # пользователя в статический метод create класса Post, который мы фактически
                            # используем как конструктор.
entry = Post.create(choice)

                            # Сейчас в переменной entry лежит один из детей класса Post, какой именно,
                            # определилось выбором пользователя, переменной choice. Но мы не знаем какой,
                            # и обращаемся с entry как с объектом класса Post, этого оказывается достаточно
                            # так как у любго наследника класса Post должны быть реализованы методы
                            # read_from_console и save.


entry.read_from_console     # Просим пользователя ввести пост (каким бы он ни был)

entry.save   # Сохраняем пост в файл


puts 'Ваша запись сохранена!'  # Сообщаем пользователю о том, что его запись созранена в файл.