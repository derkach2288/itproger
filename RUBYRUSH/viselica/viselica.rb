require_relative "methods.rb"

cls    # Сначала очистим экран, чтобы не видно было загаданное слово

puts "Игра виселица, версия 1"

letters = get_letters  # Создадим массив букв загаданного слова. «Взятием» букв у нас будет заниматься
                       # метод get_letters. Он будет возвращать массив из букв загаданного слова.

errors = 0             # Объявим переменную errors, которая будет хранить текущее значение количества
                       # ошибок, которое совершил пользователь. Начальное значение, очевидно, 0.

                       # Объявим два массива. Каждая попытка пользователя будет попадать в один из этих массивов.
bad_letters = []       # массив для правильно отгаданных букв  
good_letters =[]       # масив для букв, которых нет в загаданном слове).


while errors < 7 do
    print_status(letters, good_letters, bad_letters, errors)    # метод, который показывает состояние игры. 
                                                                # принимает на вход все переменные, нужные для описания состояния игры: 
                                                                # буквы слова, отгаданные буквы, промахи и количество ошибок.

    puts "введите следующую букву"
    user_input = get_user_input       # всю обработку ввода будет делать метод get_user_input, который вернет нам только букву.
    
    result = check_result(user_input, letters, good_letters, bad_letters)  # Проверяем введенную букву специальным методом check_result, 
                                                                        # которому тоже для работы нужно знать все о состоянии игры: 
                                                                        # что ввел пользователь, какие буквы есть в слове и какие буквы 
                                                                        # пользователь уже пробовал.
                             # В зависимости от того, что вернул нам метод check_result, мы принимаем одно из решений:
    if (result == -1) # Если метод вернул -1, значит буква не угадана: увеличиваем счетчик ошибок
        errors += 1
    elsif (result == 1)  # Если результат равен 1, значит пользователь угадал всё слово и пора зукругляться — прерываем цикл.
        break            # прерываем цикл.
    end              
            # Если check_result вернул нам 0, значит игра продолжается, мы ничего не  делаем, а просто запускаем тело цикла снова.

end

print_status(letters, good_letters, bad_letters, errors)      # выводим напоследок результат игры
